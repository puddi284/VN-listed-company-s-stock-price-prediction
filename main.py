# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15YEBuUwPqF8Tz_rrS34iAll1kgJy4Ttr
"""

from src.preparation import create_log_return_data_scaled
from src.model import train_lstm_model, evaluate_model
from src.utils import inverse_transform_predictions_safe
import numpy as np

# ⚙️ Cấu hình
symbol = "FPT"
start_page = 1
end_page = 40
target_col = "GiaDongCua"
feature_cols = [
    'Return', 'MA5', 'MA10', 'MA20', 'Volatility_5',
    'OpenCloseGap', 'HighLowRange', 'VolumeChange',
    'log_GiaDongCua_lag1'
]

# 📦 Bước 1: Tạo dữ liệu huấn luyện và kiểm tra
X_train, y_train, X_test, y_test, y_true_log, scaler, all_cols = create_log_return_data_scaled(
    symbol=symbol,
    start_page=start_page,
    end_page=end_page,
    target_col=target_col,
    feature_cols=feature_cols,
    window_size=10,
    test_size=0.2,
    stride=1,
    scaler_type='minmax'
)

# 🤖 Bước 2: Huấn luyện mô hình LSTM
model, _ = train_lstm_model(X_train, y_train, X_test, y_test)

# 🔮 Bước 3: Dự đoán
y_pred_scaled = model.predict(X_test).flatten()
dl_results = inverse_transform_predictions_safe(
    y_pred_scaled_dict={'LSTM': y_pred_scaled},
    X_test=X_test,
    scaler=scaler,
    target_col_log='log_' + target_col,
    all_cols=all_cols,
    return_log=False
)

# 📊 Bước 4: Đánh giá
y_pred_real = dl_results['LSTM']
y_true_real = np.expm1(y_true_log)
metrics = evaluate_model(y_true_real, y_pred_real)

# 🖨️ Kết quả
print("🎯 Kết quả đánh giá mô hình LSTM:")
for k, v in metrics.items():
    print(f"{k}: {v:.4f}")