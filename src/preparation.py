# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15YEBuUwPqF8Tz_rrS34iAll1kgJy4Ttr
"""

import numpy as np
import pandas as pd
from sklearn.preprocessing import MinMaxScaler, StandardScaler
from .features import add_technical_features

def prepare_log_lag_df(symbol, start_page, end_page, target_col, lags=[1]):
    df = add_technical_features(symbol, start_page, end_page)
    target_col_log = f'log_{target_col}'
    df[target_col_log] = np.log1p(df[target_col])

    for lag in lags:
        df[f'{target_col_log}_lag{lag}'] = df[target_col_log].shift(lag)

    df = df.replace([np.inf, -np.inf], np.nan).dropna().reset_index(drop=True)
    return df, target_col_log

def create_log_return_data_scaled(symbol, start_page, end_page, target_col, feature_cols,
                                  window_size=10, test_size=0.2, stride=1, scaler_type='minmax'):
    df, target_col_log = prepare_log_lag_df(symbol, start_page, end_page, target_col)
    all_cols = feature_cols + [target_col_log]

    scaler = MinMaxScaler() if scaler_type == 'minmax' else StandardScaler()
    df = df.replace([np.inf, -np.inf], np.nan).dropna(subset=all_cols)
    df_scaled = scaler.fit_transform(df[all_cols])
    df_scaled = pd.DataFrame(df_scaled, columns=all_cols)

    split_idx = int(len(df_scaled) * (1 - test_size))
    train_df = df_scaled.iloc[:split_idx].reset_index(drop=True)
    test_df = df_scaled.iloc[split_idx:].reset_index(drop=True)

    def sliding(df):
        X, y = [], []
        for i in range(0, len(df) - window_size, stride):
            X.append(df.iloc[i:i+window_size][feature_cols].values)
            y.append(df.iloc[i+window_size][target_col_log])
        return np.array(X), np.array(y)

    X_train, y_train = sliding(train_df)
    X_test, y_test = sliding(test_df)
    y_true_unscaled = df.iloc[split_idx + window_size:][target_col_log].reset_index(drop=True)

    return X_train, y_train, X_test, y_test, y_true_unscaled, scaler, all_cols